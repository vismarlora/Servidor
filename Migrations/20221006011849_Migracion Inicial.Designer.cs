// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servidor.DAL;

namespace Servidor.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221006011849_Migracion Inicial")]
    partial class MigracionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Servidor.Models.Mesa", b =>
                {
                    b.Property<int>("IdMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Forma")
                        .HasColumnType("TEXT");

                    b.Property<float>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("IdMesa");

                    b.ToTable("Mesa");

                    b.HasData(
                        new
                        {
                            IdMesa = 1,
                            Capacidad = 4,
                            Disponibilidad = true,
                            Forma = "Redonda",
                            Precio = 1500f
                        },
                        new
                        {
                            IdMesa = 2,
                            Capacidad = 6,
                            Disponibilidad = true,
                            Forma = "Rectangular",
                            Precio = 2500f
                        });
                });

            modelBuilder.Entity("Servidor.Models.Persona", b =>
                {
                    b.Property<int>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("idPersona");

                    b.ToTable("Persona");

                    b.HasData(
                        new
                        {
                            idPersona = 1,
                            Direccion = "San Francisco",
                            Nombre = "Vismar",
                            Telefono = "829-219-6048"
                        },
                        new
                        {
                            idPersona = 2,
                            Direccion = "San Francisco",
                            Nombre = "Gregory",
                            Telefono = "829-555-0707"
                        });
                });

            modelBuilder.Entity("Servidor.Models.Reservacion", b =>
                {
                    b.Property<int>("idReservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMesa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("idPersona")
                        .HasColumnType("INTEGER");

                    b.HasKey("idReservacion");

                    b.HasIndex("IdMesa");

                    b.HasIndex("idPersona");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Servidor.Models.Reservacion", b =>
                {
                    b.HasOne("Servidor.Models.Mesa", "Mesa")
                        .WithMany()
                        .HasForeignKey("IdMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("idPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesa");

                    b.Navigation("Persona");
                });
#pragma warning restore 612, 618
        }
    }
}
